matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
[0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5]
>>> matrix_divided(matrix, -2)
[-0.5, -1.0, -1.5, -2.0, -2.5, -3.0, -3.5, -4.0, -4.5]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, float('inf'))
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
>>> matrix_divided(float('inf'), 33)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[2, 3, 4], [4, 5, float('inf')]]
>>> matrix_divided(matrix, 33)
[0.06, 0.09, 0.12, 0.12, 0.15, inf]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided(None, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(4, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([4, 3, 2], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2], [1, 2, 3]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
